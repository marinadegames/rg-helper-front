{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\temp\\\\frontend\\\\src\\\\Components\\\\InputMenuResearchType\\\\InputMenuTypes.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, memo, useCallback, useState } from 'react';\nimport { Menu, Transition } from '@headlessui/react';\nimport { ChevronDownIcon } from '@heroicons/react/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputMenuTypes = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const [type, setType] = useState('Выбрать');\n  const selectType = useCallback(t => {\n    setType(t);\n    props.callback(t);\n  }, [type]);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    as: \"div\",\n    className: \"relative inline-block text-left w-full \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Menu.Button, {\n        className: \"inline-flex justify-between w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\",\n        children: [type, /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n          className: \"-mr-1 ml-2 h-5 w-5\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Transition, {\n      as: Fragment,\n      enter: \"transition ease-out duration-100\",\n      enterFrom: \"transform opacity-0 scale-95\",\n      enterTo: \"transform opacity-100 scale-100\",\n      leave: \"transition ease-in duration-75\",\n      leaveFrom: \"transform opacity-100 scale-100\",\n      leaveTo: \"transform opacity-0 scale-95\",\n      children: /*#__PURE__*/_jsxDEV(Menu.Items, {\n        className: \"absolute w-56 mt-1 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-1 \",\n          children: props.types.map(t => {\n            return /*#__PURE__*/_jsxDEV(Menu.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: 'bg-gray-100 text-gray-900 block px-4 py-2 hover:bg-gray-200 cursor-pointer text-sm',\n                onClick: () => selectType(t),\n                children: t\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)\n            }, Math.random(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}, \"MzGvqaoptt2q4kT7zKSsgL0Pfcc=\")), \"MzGvqaoptt2q4kT7zKSsgL0Pfcc=\");\n_c2 = InputMenuTypes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputMenuTypes$memo\");\n$RefreshReg$(_c2, \"InputMenuTypes\");","map":{"version":3,"sources":["D:/projects/temp/frontend/src/Components/InputMenuResearchType/InputMenuTypes.tsx"],"names":["Fragment","memo","useCallback","useState","Menu","Transition","ChevronDownIcon","InputMenuTypes","props","type","setType","selectType","t","callback","types","map","Math","random"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,IAAlB,EAAwBC,WAAxB,EAAqCC,QAArC,QAAoD,OAApD;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,SAAQC,eAAR,QAA8B,wBAA9B;;AAOA,OAAO,MAAMC,cAAc,iCAAGN,IAAI,SAAEO,KAAD,IAAsB;AAAA;;AAErD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAqB,SAArB,CAAhC;AAEA,QAAMQ,UAAU,GAAGT,WAAW,CAAEU,CAAD,IAAe;AAC1CF,IAAAA,OAAO,CAACE,CAAD,CAAP;AACAJ,IAAAA,KAAK,CAACK,QAAN,CAAeD,CAAf;AACH,GAH6B,EAG5B,CAACH,IAAD,CAH4B,CAA9B;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAe,IAAA,SAAS,EAAC,yCAAzB;AAAA,4BACI;AAAA,6BACI,QAAC,IAAD,CAAM,MAAN;AACI,QAAA,SAAS,EAAC,2PADd;AAAA,mBAEKA,IAFL,eAGI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,oBAA3B;AAAgD,yBAAY;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,UAAD;AACI,MAAA,EAAE,EAAET,QADR;AAEI,MAAA,KAAK,EAAC,kCAFV;AAGI,MAAA,SAAS,EAAC,8BAHd;AAII,MAAA,OAAO,EAAC,iCAJZ;AAKI,MAAA,KAAK,EAAC,gCALV;AAMI,MAAA,SAAS,EAAC,iCANd;AAOI,MAAA,OAAO,EAAC,8BAPZ;AAAA,6BASI,QAAC,IAAD,CAAM,KAAN;AACI,QAAA,SAAS,EAAC,2GADd;AAAA,+BAEI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBACKQ,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAgBH,CAAC,IAAI;AAClB,gCACI,QAAC,IAAD,CAAM,IAAN;AAAA,qCACI;AACI,gBAAA,SAAS,EAAE,oFADf;AAEI,gBAAA,OAAO,EAAE,MAAMD,UAAU,CAACC,CAAD,CAF7B;AAAA,0BAGKA;AAHL;AAAA;AAAA;AAAA;AAAA;AADJ,eAAgBI,IAAI,CAACC,MAAL,EAAhB;AAAA;AAAA;AAAA;AAAA,oBADJ;AASH,WAVA;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CA/CiC,kCAAP,iCAApB;MAAMV,c","sourcesContent":["import {Fragment, memo, useCallback, useState} from 'react'\r\nimport {Menu, Transition} from '@headlessui/react'\r\nimport {ChevronDownIcon} from '@heroicons/react/solid'\r\n\r\ntype PropsType = {\r\n    types: Array<string>\r\n    callback: (value: string) => void\r\n}\r\n\r\nexport const InputMenuTypes = memo((props: PropsType) => {\r\n\r\n    const [type, setType] = useState<string | 'Выбрать'>('Выбрать')\r\n\r\n    const selectType = useCallback((t: string) => {\r\n        setType(t)\r\n        props.callback(t)\r\n    },[type])\r\n\r\n    return (\r\n        <Menu as=\"div\" className=\"relative inline-block text-left w-full \">\r\n            <div>\r\n                <Menu.Button\r\n                    className=\"inline-flex justify-between w-full rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\">\r\n                    {type}\r\n                    <ChevronDownIcon className=\"-mr-1 ml-2 h-5 w-5\" aria-hidden=\"true\"/>\r\n                </Menu.Button>\r\n            </div>\r\n\r\n            <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-100\"\r\n                enterFrom=\"transform opacity-0 scale-95\"\r\n                enterTo=\"transform opacity-100 scale-100\"\r\n                leave=\"transition ease-in duration-75\"\r\n                leaveFrom=\"transform opacity-100 scale-100\"\r\n                leaveTo=\"transform opacity-0 scale-95\"\r\n            >\r\n                <Menu.Items\r\n                    className=\"absolute w-56 mt-1 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10\">\r\n                    <div className=\"py-1 \">\r\n                        {props.types.map(t => {\r\n                            return (\r\n                                <Menu.Item key={Math.random()}>\r\n                                    <div\r\n                                        className={'bg-gray-100 text-gray-900 block px-4 py-2 hover:bg-gray-200 cursor-pointer text-sm'}\r\n                                        onClick={() => selectType(t)}>\r\n                                        {t}\r\n                                    </div>\r\n                                </Menu.Item>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </Menu.Items>\r\n            </Transition>\r\n        </Menu>\r\n    )\r\n}\r\n)"]},"metadata":{},"sourceType":"module"}