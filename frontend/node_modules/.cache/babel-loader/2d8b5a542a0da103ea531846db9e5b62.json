{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\temp\\\\frontend\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport s from './App.module.css';\nimport { Sidebar } from \"./Components/sidebar/Sidebar\";\nimport { AllPatients } from \"./Components/all pateints/AllPatients\";\nimport { Route, Routes } from 'react-router-dom';\nimport { AddPatient } from \"./Components/add-patient/AddPatient\";\nimport { Notification } from \"./Components/universal components/Notification\";\nimport { useSelector } from \"react-redux\";\nimport { Search } from \"./Components/search/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const errorMode = useSelector(state => state.app.errorMode);\n  const errorMessage = useSelector(state => state.app.error);\n  const successfulMessage = useSelector(state => state.app.successful);\n  const successfulMode = useSelector(state => state.app.successfulMode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.App,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AllPatients, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-patient\",\n        element: /*#__PURE__*/_jsxDEV(AddPatient, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"404 not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), errorMode && /*#__PURE__*/_jsxDEV(Notification, {\n      typeMessage: 'error',\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }, this), successfulMode && /*#__PURE__*/_jsxDEV(Notification, {\n      typeMessage: 'successful',\n      message: successfulMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"N3GPItswjZlYWTPLxyHtmb7mbrU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/projects/temp/frontend/src/App.tsx"],"names":["React","s","Sidebar","AllPatients","Route","Routes","AddPatient","Notification","useSelector","Search","App","errorMode","state","app","errorMessage","error","successfulMessage","successful","successfulMode","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,kBAAd;AACA,SAAQC,OAAR,QAAsB,8BAAtB;AACA,SAAQC,WAAR,QAA0B,uCAA1B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAAQC,UAAR,QAAyB,qCAAzB;AACA,SAAQC,YAAR,QAA2B,gDAA3B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,MAAR,QAAqB,4BAArB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACrB,QAAMC,SAAS,GAAGH,WAAW,CAA2BI,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUF,SAA9C,CAA7B;AACA,QAAMG,YAAY,GAAGN,WAAW,CAA0BI,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUE,KAA7C,CAAhC;AACA,QAAMC,iBAAiB,GAAGR,WAAW,CAA0BI,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUI,UAA7C,CAArC;AACA,QAAMC,cAAc,GAAGV,WAAW,CAA2BI,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUK,cAA9C,CAAlC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEjB,CAAC,CAACS,GAAlB;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,cAAZ;AAA2B,QAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,IAAZ;AAAiB,QAAA,OAAO,eAAE;AAAI,UAAA,KAAK,EAAE;AAACS,YAAAA,SAAS,EAAE;AAAZ,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQKR,SAAS,iBAAI,QAAC,YAAD;AAAc,MAAA,WAAW,EAAE,OAA3B;AAAoC,MAAA,OAAO,EAAEG;AAA7C;AAAA;AAAA;AAAA;AAAA,YARlB,EASKI,cAAc,iBAAI,QAAC,YAAD;AAAc,MAAA,WAAW,EAAE,YAA3B;AAAyC,MAAA,OAAO,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,YATvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAnBM;;GAAMN,G;UACSF,W,EACGA,W,EACKA,W,EACHA,W;;;KAJdE,G","sourcesContent":["import React from 'react';\r\nimport s from './App.module.css';\r\nimport {Sidebar} from \"./Components/sidebar/Sidebar\";\r\nimport {AllPatients} from \"./Components/all pateints/AllPatients\";\r\nimport {Route, Routes} from 'react-router-dom';\r\nimport {AddPatient} from \"./Components/add-patient/AddPatient\";\r\nimport {Notification} from \"./Components/universal components/Notification\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducerType} from \"./Redux/state\";\r\nimport {Search} from \"./Components/search/Search\";\r\n\r\nexport const App = () => {\r\n    const errorMode = useSelector<rootReducerType, boolean>(state => state.app.errorMode)\r\n    const errorMessage = useSelector<rootReducerType, string>(state => state.app.error)\r\n    const successfulMessage = useSelector<rootReducerType, string>(state => state.app.successful)\r\n    const successfulMode = useSelector<rootReducerType, boolean>(state => state.app.successfulMode)\r\n\r\n    return (\r\n        <div className={s.App}>\r\n            <Sidebar/>\r\n            <Routes>\r\n                <Route path='/' element={<AllPatients/>}/>\r\n                <Route path='/add-patient' element={<AddPatient/>}/>\r\n                <Route path='/search' element={<Search/>}/>\r\n                <Route path='/*' element={<h1 style={{textAlign: 'center'}}>404 not found</h1>}/>\r\n            </Routes>\r\n            {errorMode && <Notification typeMessage={'error'} message={errorMessage}/>}\r\n            {successfulMode && <Notification typeMessage={'successful'} message={successfulMessage}/>}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}